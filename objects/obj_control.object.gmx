<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_init_game_variables()
storage=0;
alarm[1]=100
alarm[0]=1
show_tickets=1
alarm[2]=random(2000)+500
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///problem maker 5000
problem_maker()
alarm[2]=irandom(2000)+500;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[5]=ta5;
mode=2
//***********************************************************
//OP_setscreen
//***********************************************************
if (os_browser != browser_not_a_browser)
{
    if(mode==0)
    {
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            window_set_position(0,0);
            old_bw=bw;
            old_bh=bh;
        }
    }
    else if(mode==1)//fit allways
    {
        gw=room_width;
        gh=room_height;
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            x1bh=floor(bw*gh/gw);
            if(x1bh&lt;bh)
            {
                window_set_size(bw,x1bh);
            }
            else
            {
                x2bw=floor(bh*gw/gh);
                window_set_size(x2bw,bh);
            }
            window_center();
            old_bw=bw;
            old_bh=bh;
        }
    }
    
    else if(mode==2)//stretch
    {
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            window_set_size(browser_width,browser_height);
            old_bw=bw;
            old_bh=bh;
        }
    }
    else if(mode==3)//fit when bigger &amp;&amp; centerd
    {
        gw=room_width;
        gh=room_height;
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            old_bw=browser_width;
            old_bh=browser_height;
            if(bw&lt;gw || bh&lt;gh)
            {
                x1bh=floor(bw*gh/gw);
                if(x1bh&lt;bh)
                {
                    window_set_size(bw,x1bh);
                }
                else
                {
                    x2bw=floor(bh*gw/gh);
                    window_set_size(x2bw,bh);
                }
                window_center();
            }
            else
            {
                window_set_size(gw,gh);
                window_center();
            }
            old_bw=bw;
            old_bh=bh;
        }
    }
}
//***********************************************************
//END
//***********************************************************
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera_control
var left=keyboard_check(vk_left);
var right=keyboard_check(vk_right);
var up=keyboard_check(vk_up);
var down=keyboard_check(vk_down);

if (left) {x-=VIEWSPEED}
if (right) {x+=VIEWSPEED}
if (down) {y+=VIEWSPEED}
if (up) {y-=VIEWSPEED}

view_wview[0] = 1280 * ZOOM
view_hview[0] = 720 * ZOOM
view_xview[0] = x - view_wview / 2
view_yview[0] = y - view_hview / 2

guix = window_mouse_get_x();  
guiy = window_mouse_get_y();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///equipment
COMPUTERS=instance_number(obj_desk_front)+instance_number(obj_desk_back);
PRINTERS_SMALL=instance_number(obj_printer_small);
PRINTERS_LARGE=instance_number(obj_printer_big);
SERVERS=instance_number(obj_server);
WIRELESS=instance_number(obj_wireless_basic);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//game button control

if SHOWWIFI &gt;=2 {SHOWWIFI=0}
if SHOWPATHS &gt;=2 {SHOWPATHS=0}
if SHOWNAMES &gt;=2 {SHOWNAMES=0}
if SHOWPC &gt;=2 {SHOWPC=0}
if SHOWPCLINES &gt;=2 {SHOWPCLINES=0}
if SHOWPRINTERS &gt;=2 {SHOWPRINTERS=0}

if keyboard_check_released(ord("O")) {SHOWWIFI+=1}
if keyboard_check_released(ord("P")) {SHOWPRINTERS+=1}
if keyboard_check_released(ord("N")) {SHOWNAMES+=1}
if keyboard_check_released(ord("C")) {SHOWPCLINES+=1}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///power
var pcu=POWERUSED_PC*COMPUTERS;
var pru=(POWERUSED_PRINTER_SMALL*PRINTERS_SMALL)+(POWERUSED_PRINTER_LARGE*PRINTERS_LARGE);
var seru=POWERUSED_SERVER*SERVERS;
var wiu=POWERUSED_WIRELESS*WIRELESS;

POWERBILL=get_powerbill();

USEDPOWER=pcu+pru+seru+wiu;
GENERATORS=instance_number(obj_generator);
MAXPOWER=GENERATORS*25


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///users
USERS=instance_number(obj_user_basic);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///storage
STORAGE_AVAILABLE=SERVERS*STORAGE_PER_SERVER;
storage=(40/1200)*.01
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///time
if GO=1 {
SECOND+=SPEED
if SECOND &gt;=60 {MINUTE+=1 SECOND=1}
if MINUTE &gt;=60 {scr_pay_salary() HOUR+=1 MINUTE=1}
if HOUR &gt;=17 {DAY+=1 scr_it_budget() scr_age_equipment(); scr_power_bill() HOUR=8}
if DAY &gt;=30 {MONTH+=1 DAY=1}
if MONTH &gt;=12 {YEAR+=1 MONTH=1}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///trouble tracking
//scr_trouble_tracker()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ZOOM &lt; 5 {ZOOM+=.1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ZOOM &gt; 0 {ZOOM-=.1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>old_bw=0;
old_bh=0;


/*
//OP_initDevice();
if(os_type==os_android)
{
    os_powersave_enable(false);
}
device_mouse_dbclick_enable(false);

//***********************************************************
//OP_setscreen
//***********************************************************
if (os_browser != browser_not_a_browser)
{
    if(mode==0)
    {
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            window_set_position(0,0);
        }
    }
    else if(mode==1)//fit allways
    {
        gw=room_width;
        gh=room_height;
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            x1bh=floor(bw*gh/gw);
            if(x1bh&lt;bh)
            {
                window_set_size(bw,x1bh);
            }
            else
            {
                x2bw=floor(bh*gw/gh);
                window_set_size(x2bw,bh);
            }
            window_center();
        }
    }
    
    else if(mode==2)//stretch
    {
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            window_set_size(browser_width,browser_height);
        }
    }
    else if(mode==3)//fit when bigger &amp;&amp; centerd
    {
        gw=room_width;
        gh=room_height;
        bw=browser_width;
        bh=browser_height;
        
        if(bw!=old_bw || bh!=old_bh)
        {
            old_bw=browser_width;
            old_bh=browser_height;
            if(bw&lt;gw || bh&lt;gh)
            {
                x1bh=floor(bw*gh/gw);
                if(x1bh&lt;bh)
                {
                    window_set_size(bw,x1bh);
                }
                else
                {
                    x2bw=floor(bh*gw/gh);
                    window_set_size(x2bw,bh);
                }
                window_center();
            }
            else
            {
                window_set_size(gw,gh);
                window_center();
            }
        }
    }
}
//***********************************************************
//END
//***********************************************************
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start bg music
audio_play_sound(bg_music_main,0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_gui();
if show_tickets=1 {
scr_draw_trouble_tracker();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
